---
import { addCode } from '$lib/lib/common/element';
import PageDates from '$lib/lib/zoihuc/ZhcPageDates';
import ClsZhcFootnoteList from '$lib/lib/zoihuc/classes/ClsZhcFootnoteList';
import type IntfFrontmatter from '$lib/lib/zoihuc/interfaces/IntfZhcFrontmatter';
import Zoihuc from '$lib/layouts/Zoihuc.astro';
import ZhcFootnote from '$lib/components/zoihuc/ZhcFootnote.astro';
import ZhcFootnoteLink from '$lib/components/zoihuc/ZhcFootnoteLink.astro';

export const frontmatter: IntfFrontmatter = {
	title: 'スクロールすると固定したオブジェクトが消える',
	pageDates: new PageDates('2025-04-01', '2025-04-01'),
	description:
		'sticky で画面上部に固定したオブジェクトがスクロールすると消えた。',
	tags: ['CSS'],
};

const code1 = `<html>
    <body>
        <nav>
            <ul>
                <li>アイテム1</li>
                <li>アイテム2</li>
                <li>アイテム3</li>
            </ul>
        </nav>
        <!-- メインコンテンツ -->
    </body>
</html>`;

const code2 = `html { height: 100%; }

body { height: inherit; }

nav {
	position: sticky;
	top: 0;
}`;

const code3 = `body { height: inherit; /* 100% */ }`;

const code4 = `body { height: max-content; }`;

const code5 = `html { height: 100%; }`;

const footnoteList = new ClsZhcFootnoteList([
	{
		key: 'environment',
		text: `ご覧の環境によっては本現象が再現されない可能性もある。また、 ${addCode('<html>')} や ${addCode('<body>')} の代わりに ${addCode('<div>')} を用いるため、実際とは挙動が異なる場合がある。`,
	},
]);
---

<Zoihuc {frontmatter} visibleTags={true} visibleFooter={false}>
	<main>
		<article>
			<section>
				<h2>注意</h2>

				<h3>本現象の原因と解決策について</h3>
				<p>
					本稿では遭遇した現象の原因については、<strong
						>調査と検証が足りないため掲載していない。従って解決方法の効果も保証できない。</strong
					>
				</p>

				<h3>環境による差異</h3>
				<p>
					HTML や CSS
					のレンダリングはブラウザやデバイスなど環境に左右されるため、この方法で解決するとは限らない。
				</p>
			</section>

			<section>
				<h2>現象</h2>

				<h3>要素の固定</h3>
				<p><code>&lt;nav&gt;</code> 要素を以下の方法で画面上部に固定した。</p>

				<h4>HTML</h4>
				<pre><code>{code1}</code></pre>

				<h4>スタイル</h4>
				<pre><code>{code2}</code></pre>

				<h3>発生した問題</h3>
				<p>固定した <code>&lt;nav&gt;</code> がスクロール中に消失する。</p>

				<h3>再現</h3>
				<p>
					発生した現象をできる限り再現した。スクロールすると途中で「ナビゲーション」が消えるはずだ。<ZhcFootnoteLink
						index={footnoteList.searchIndex('environment')}
					/>
				</p>

				<div class="repro-container">
					<div class="repro-html">
						<div class="repro-body repro-body-before">
							<nav class="repro-nav">
								<p>ナビゲーション</p>
							</nav>
							<p class="repro-children">子要素</p>
						</div>
					</div>
				</div>
			</section>

			<section>
				<h2>解決</h2>
				<p>
					<code>&lt;body&gt;</code> の <code>height</code> を <code>inherit</code> から
					<code>max-content</code> へ変更する。
				</p>

				<h4>変更前</h4>
				<pre><code>{code3}</code></pre>

				<h4>変更後</h4>
				<pre><code>{code4}</code></pre>

				<h3>再現</h3>
				<p>
					実際に <code>&lt;body&gt;</code> の <code>height</code> を <code
						>inherit</code
					> から <code>max-content</code> 変更したときの変化を再現した。「変更前」は下へスクロールすると「ナビゲーション」が消えるが「変更後」は消えない。
				</p>

				<h4>変更前</h4>
				<div class="repro-container">
					<div class="repro-html">
						<div class="repro-body repro-body-before">
							<nav class="repro-nav">
								<p>ナビゲーション</p>
							</nav>
							<p class="repro-children">子要素</p>
						</div>
					</div>
				</div>

				<h4>変更後</h4>
				<div class="repro-container">
					<div class="repro-html">
						<div class="repro-body repro-body-after">
							<nav class="repro-nav">
								<p>ナビゲーション</p>
							</nav>
							<p class="repro-children">子要素</p>
						</div>
					</div>
				</div>
			</section>

			<section>
				<h2>まとめ</h2>

				<h3>発生した現象</h3>
				<p>スクロールすると <code>sticky</code> で固定した要素が消えた。</p>

				<h3>解決策</h3>
				<p>子要素が飛び出さないように親要素と子要素の高さを合わせた。</p>
			</section>

			<section>
				<h2>追記</h2>

				<h3>html の height による問題</h3>
				<p>
					その後 CSS を編集していると、今回の現象は <code>&lt;html&gt;</code> に <code
						>height: 100%</code
					> を指定したことが原因である可能性が出てきた。現時点では原因が <code
						>height</code
					> 自体の問題か、値の <code>100%</code> に問題があるのか、それ以外の問題かは判っていない。とにかく
					<code>body</code> の <code>height</code> に設定に関わらず <code
						>&lt;html&gt;</code
					> から <code>height</code> の設定を削除すれば、スクロールで <code
						>&lt;nav&gt;</code
					> が消えないという結果を得た。
				</p>

				<h4>削除する部分</h4>
				<pre><code>{code5}</code></pre>

				<h3>html の height を削除した例の再現</h3>
				<p>
					<code>&lt;html&gt;</code> から <code>height</code> を削除した際の挙動を再現した。それぞれ
					<code>&lt;body&gt;</code> の <code>height</code> を変更しているが、いずれもスクロールによって「ナビゲーション」は消失は発生しないはずだ。
				</p>

				<h4>body の height を削除した場合</h4>
				<div class="repro-container">
					<div>
						<div class="repro-body">
							<nav class="repro-nav">
								<p>ナビゲーション</p>
							</nav>
							<p class="repro-children">子要素</p>
						</div>
					</div>
				</div>

				<h4>body &#123; height: inherit; &#125; の場合</h4>
				<div class="repro-container">
					<div>
						<div class="repro-body repro-body-before">
							<nav class="repro-nav">
								<p>ナビゲーション</p>
							</nav>
							<p class="repro-children">子要素</p>
						</div>
					</div>
				</div>

				<h4>body &#123; height: max-content; &#125; の場合</h4>
				<div class="repro-container">
					<div>
						<div class="repro-body repro-body-after">
							<nav class="repro-nav">
								<p>ナビゲーション</p>
							</nav>
							<p class="repro-children">子要素</p>
						</div>
					</div>
				</div>
			</section>
		</article>

		<ZhcFootnote footnotes={footnoteList.footnotes} />
	</main>
</Zoihuc>

<style>
	.repro-container {
		height: 10rem;
		overflow-y: auto;
		border: solid 1px;
	}

	.repro-html {
		height: 100%;
	}

	.repo-body {
		z-index: -2;
	}

	.repro-body-before {
		height: inherit;
	}

	.repro-body-after {
		height: max-content;
	}

	.repro-nav {
		z-index: -1;
		position: sticky;
		top: 0;
		width: 100%;
		color: var(--epaper-light);
		background-color: var(--epaper-dark);
	}

	.repro-nav > p {
		margin-block: 0;
	}

	.repro-children {
		height: 150vh;
	}
</style>
